(function(n,i){typeof exports=="object"&&typeof module<"u"?module.exports=i():typeof define=="function"&&define.amd?define(i):(n=typeof globalThis<"u"?globalThis:n||self,n["anything-gpt"]=i())})(this,function(){"use strict";const n=t=>t!=null&&t.body?t:Promise.reject(t),i=t=>[t==null?void 0:t.status,t==null?void 0:t.statusCode].some(e=>e===200)?t:Promise.reject(t),m={model:"gpt-3.5-turbo",temperature:.7,max_tokens:4e3,stream:!0},f={api_key:"",markdown:!1},o=t=>({gpt:{...m,...t==null?void 0:t.gpt},instance:{...f,...t==null?void 0:t.instance}});async function g(t=o(),e,...a){if(!t.instance.api_key){console.error("ERROR: ChatGPT API KEY is undefined.");return}const s=Array.from(e).map((r,u)=>{const c=a[u];return r+(c instanceof Object?JSON.stringify(c):c||"")}).join("");return this.state.push({role:"user",content:s}),await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t.instance.api_key}`,"Content-Type":"application/json"},body:JSON.stringify({...t.gpt,messages:this.state})}).then(n).then(i).then(async r=>t.gpt.stream?this.stream(r):this.text(r)).catch(r=>this.error(r))}const y=t=>({state:t.state||[],storage:t.storage||new Map,text:async e=>{var a;return(a=t==null?void 0:t.text)==null?void 0:a.call(t,e)},stream:async e=>{var a;return(a=t==null?void 0:t.stream)==null?void 0:a.call(t,e)},error:async e=>{var a;return(a=t==null?void 0:t.error)==null?void 0:a.call(t,e)}}),l=t=>TextDecoder?new TextDecoder().decode(t,{stream:!0}):String.fromCharCode(...t),b=t=>{try{return JSON.parse(`["${t}"]`)[0]||t}catch{return t}},O=(t,e)=>{const a=t.body.getReader();return a.read().then(async function s({done:r,value:u}){if(r)return e("",!0);const c=/"content":\s*"((\\.|[^"])*)"/gm;for await(const d of l(u).matchAll(c))d[1]&&await e(b(d[1]));return a.read().then(s)})};return(t=>e=>(...a)=>new Promise((s,r)=>g.apply(y({state:[],async stream(u){return s((c,d=[])=>O(u,(h,p)=>d.push(h)&&p?Object.assign(this.state,{[this.state.length-1]:{role:"assistant",content:d.join("")}}):c(h)))},error:r}),[o({gpt:t.gpt,instance:Object.assign({api_key:e},t==null?void 0:t.instance)}),...a])))({gpt:{model:"gpt-3.5-turbo"}})});
